_G.Amount = 1

local numbers = {
    [0] = "Zero", [1] = "One", [2] = "Two", [3] = "Three", [4] = "Four",
    [5] = "Five", [6] = "Six", [7] = "Seven", [8] = "Eight", [9] = "Nine",
    [10] = "Ten", [11] = "Eleven", [12] = "Twelve", [13] = "Thirteen",
    [14] = "Fourteen", [15] = "Fifteen", [16] = "Sixteen", [17] = "Seventeen",
    [18] = "Eighteen", [19] = "Nineteen", [20] = "Twenty",
    [30] = "Thirty", [40] = "Forty", [50] = "Fifty", [60] = "Sixty",
    [70] = "Seventy", [80] = "Eighty", [90] = "Ninety",
    [100] = "One Hundred", [1000] = "One Thousand"
}

local function Number(number)
    if numbers[number] then
        return numbers[number]
    elseif number < 100 then
        local tens = math.floor(number / 10) * 10
        local ones = number % 10
        return numbers[tens] .. " " .. numbers[ones]
    elseif number == 100 then
        return numbers[number]
    elseif number < 1000 then
        local hundreds = math.floor(number / 100)
        local remainder = number % 100
        if remainder == 0 then
            return numbers[hundreds] .. " Hundred"
        else
            return numbers[hundreds] .. " Hundred and " .. Number(remainder)
        end
    else
        return numbers[number]
    end
end

local player = game.Players.LocalPlayer
for i = 1, _G.Amount do
    player.Character.Humanoid.Jump = true
    wait(1)
    game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireServer(string.reverse(Number(i) .. "."), "All")
    wait(2)
end
